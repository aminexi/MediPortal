@page
@model LoginModel

@{
    ViewData["Title"] = "Connexion";
}

<style>
    :root {
        --primary: #2563eb;
        --primary-dark: #1e40af;
        --secondary: #3b82f6;
        --accent: #10b981;
        --danger: #ef4444;
        --background: #f8fafc;
        --text: #1e293b;
        --border: #e2e8f0;
        --transition: all 0.3s ease;
    }

    body {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        min-height: 100vh;
        font-family: 'Inter', system-ui, -apple-system, sans-serif;
    }

    .login-container {
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem 1rem;
    }

    .card {
        background: white;
        border: none;
        border-radius: 1.5rem;
        overflow: hidden;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 450px;
        position: relative;
    }

    .card::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(to right, var(--primary), var(--secondary));
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        color: white;
        padding: 2rem;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .card-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('https://images.unsplash.com/photo-1576091160399-112ba8d25d1d?auto=format&fit=crop&w=1000&q=80') center/cover;
        opacity: 0.1;
    }

    .card-header h3 {
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        position: relative;
    }

    .card-header p {
        opacity: 0.9;
        margin: 0;
        position: relative;
    }

    .card-body {
        padding: 2.5rem 2rem;
    }

    .form-floating {
        margin-bottom: 1.5rem;
    }

    .form-floating label {
        color: #64748b;
        padding-left: 1rem;
    }

    .form-control {
        border: 2px solid var(--border);
        border-radius: 0.75rem;
        padding: 1rem;
        height: auto;
        font-size: 1rem;
        transition: var(--transition);
    }

    .form-control:focus {
        border-color: var(--primary);
        box-shadow: 0 0 0 4px rgba(37, 99, 235, 0.1);
    }

    .form-check {
        padding-left: 1.75rem;
    }

    .form-check-input {
        width: 1.25rem;
        height: 1.25rem;
        margin-left: -1.75rem;
        border: 2px solid var(--border);
        transition: var(--transition);
    }

    .form-check-input:checked {
        background-color: var(--primary);
        border-color: var(--primary);
    }

    .form-check-label {
        color: #64748b;
        font-size: 0.95rem;
        padding-top: 0.2rem;
    }

    .btn-login {
        background: linear-gradient(135deg, var(--primary) 0%, var(--secondary) 100%);
        color: white;
        border: none;
        border-radius: 0.75rem;
        padding: 1rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: var(--transition);
    }

    .btn-login:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(37, 99, 235, 0.2);
    }

    .btn-login:disabled {
        background: #cbd5e1;
        transform: none;
        box-shadow: none;
    }

    .login-links {
        margin-top: 2rem;
        text-align: center;
    }

    .login-links a {
        color: var(--primary);
        text-decoration: none;
        font-weight: 500;
        transition: var(--transition);
    }

    .login-links a:hover {
        color: var(--primary-dark);
    }

    .divider {
        display: flex;
        align-items: center;
        text-align: center;
        margin: 1.5rem 0;
        color: #94a3b8;
    }

    .divider::before,
    .divider::after {
        content: '';
        flex: 1;
        border-bottom: 1px solid #e2e8f0;
    }

    .divider span {
        padding: 0 1rem;
        font-size: 0.875rem;
    }

    .text-danger {
        color: var(--danger) !important;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }

    /* Animations */
    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .animate-slide-up {
        animation: slideUp 0.5s ease forwards;
    }

    .delay-1 { animation-delay: 0.1s; }
    .delay-2 { animation-delay: 0.2s; }
    .delay-3 { animation-delay: 0.3s; }
</style>

<div class="login-container">
    <div class="card animate-slide-up">
        <div class="card-header">
            <h3>Bienvenue sur MediPortal</h3>
            <p>Connectez-vous pour accéder à votre espace</p>
        </div>
        <div class="card-body">
            <form id="account" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3" role="alert"></div>

                <div class="form-floating delay-1">
                    <input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="nom@exemple.com" />
                    <label asp-for="Input.Email">
                        <i class="bi bi-envelope me-2"></i>Email
                    </label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>

                <div class="form-floating delay-2">
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="mot de passe" type="password" />
                    <label asp-for="Input.Password">
                        <i class="bi bi-lock me-2"></i>Mot de passe
                    </label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>

                <div class="form-check mb-3 delay-2">
                    <input class="form-check-input" asp-for="Input.RememberMe" id="rememberMe" />
                    <label class="form-check-label" asp-for="Input.RememberMe">
                        Se souvenir de moi
                    </label>
                </div>

                <button id="login-submit" type="submit" class="btn btn-login w-100 delay-3">
                    <i class="bi bi-box-arrow-in-right me-2"></i>Se connecter
                </button>

                <div class="divider delay-3">
                    <span>ou</span>
                </div>

                <div class="login-links delay-3">
                    <a id="forgot-password" asp-page="./ForgotPassword" class="d-block mb-2">
                        <i class="bi bi-question-circle me-1"></i>Mot de passe oublié ?
                    </a>
                    <p class="mb-0">
                        Vous n'avez pas de compte ? 
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">
                            <i class="bi bi-person-plus me-1"></i>S'inscrire
                        </a>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('account');
            const submitButton = document.getElementById('login-submit');
            const inputs = form.querySelectorAll('input');

            // Form validation
            function validateForm() {
                let isValid = true;
                inputs.forEach(input => {
                    if (input.hasAttribute('aria-required') && !input.value) {
                        isValid = false;
                    }
                });
                submitButton.disabled = !isValid;
            }

            // Initial validation
            validateForm();

            // Validate on input
            inputs.forEach(input => {
                input.addEventListener('input', validateForm);
            });

            // Add ripple effect to button
            submitButton.addEventListener('click', function(e) {
                if (!submitButton.disabled) {
                    const rect = submitButton.getBoundingClientRect();
                    const ripple = document.createElement('div');
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;

                    ripple.style.cssText = `
                        position: absolute;
                        width: ${size}px;
                        height: ${size}px;
                        top: ${y}px;
                        left: ${x}px;
                        background: rgba(255, 255, 255, 0.3);
                        border-radius: 50%;
                        transform: scale(0);
                        animation: ripple 0.6s linear;
                        pointer-events: none;
                    `;

                    submitButton.style.position = 'relative';
                    submitButton.style.overflow = 'hidden';
                    submitButton.appendChild(ripple);

                    setTimeout(() => ripple.remove(), 600);
                }
            });
        });

        // Add ripple animation
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    </script>
}